@model Projeto_ESFase2.Models.AddNomineeViewModel
@{
    ViewData["Title"] = "AddNominee";
    var URLId = ViewContext.RouteData.Values["id"];
}

<h1>AddNominee</h1>

<h2>Add Nominee for a Competition: @Model.CompetitionName</h2>
<div class="row">
    <div class="col-md-4">
        <form asp-controller="Competition" asp-action="AddNominee" >
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="CompetitionId" />
            <span asp-validation-for="CompetitionId" class="text-danger"></span>
            <input type="hidden" asp-for="CompetitionName" />
            <span asp-validation-for="CompetitionName" class="text-danger"></span>
            <input type="hidden" asp-for="AvailableNominee" />
            <span asp-validation-for="AvailableNominee" class="text-danger"></span>

            <div class="form-group">
                <label asp-for="SelectedNomineeIds" class="control-label">Select Course:</label>
                <select asp-for="SelectedNomineeIds" asp-items="@Model.AvailableNominee.Select(c => new SelectListItem { Value = c.Id.ToString(), Text = c.Name })" class="form-control"></select>
                <span asp-validation-for="SelectedNomineeIds" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Add Nominee" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}